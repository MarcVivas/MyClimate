openapi: 3.0.3


info:
  title: MyClimate API
  version: 1.0.0

servers:
  - url: http://127.0.0.1:8000


tags:
  - name: home
  - name: sensor
  - name: temperature
  - name: prediction
  - name: user






paths:
  /homes:
    post:
      tags:
        - home
      security:
        - bearerAuth: []
      summary: Creates a new home
      description: >
        Creates a new home with the given data  
        The owner of the home will be the authenticated user.
        Requires authentication.

      requestBody:
        description: Home information
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >
                    ** Name of the house **
                    Max length: 60
                    required: true
                  example: Mansion

                address:
                  type: string
                  description: >
                    Max length: 100
                    required: true
                  example: Duck Street 4

                description:
                  type: string
                  description: >
                    Max length: 500
                    required: true
                  example: 'House with barbacue!'

        required: true

      responses:
        '201':
          description: A new home has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Home'
        '401':
          description: Requires authentication.
        '422':
          description: Validation error, Missing values, incorrect types, too long strings...

  /user/login:
    post:
      tags:
        - user
      summary: User log in
      description: User log in. Returns a bearer authentication token.

      requestBody:
        description: User information
        content:
          application/json:

            schema:
              type: object
              properties:

                username:
                  type: string
                  description: >
                    Username of the user.
                    Max length: 60
                    Required: true
                  example: Robert

                password:
                  type: string
                  description: >
                    User's password.
                    Max length: 1024
                    Min length: 4
                    Required: true
                  example: 1234

        required: true

      responses:
        '200':
          description: User is now authenticated with the returned token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        '403':
          description: Forbidden. Passwords do not match.
        '404':
          description: User not found. There is no user with the given username.
        '422':
          description: Validation error. Missing values, too long values...

  /user/register:
    post:
      tags:
        - user
      summary: Register a new user
      description: Register a new user. Username must be unique. Password min length = 4

      requestBody:
        description: User information
        content:
          application/json:
            schema:
              type: object
              properties:

                username:
                  type: string
                  description: >
                    Unique, Max length: 60, Required: True
                  example: Robert

                password:
                  type: string
                  description: >
                    Secure, Max length: 1024 Min length: 4 Required: True
                  example: 1234

        required: true

      responses:
        '201':
          description: A new user has been created. Returns an authentication token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'

        '422':
          description: Validation error. Username alreday taken, short password...


components:
  schemas:
    Home:
      type: object
      properties:
        data:
          type: object
          properties:

            id:
              type: integer
              example: 1

            name:
              type: string
              example: Richard's home

            address:
              type: string
              example: Newlands Rise

            description:
              type: string
              example: House with pool!

            user_id:
              type: integer
              example: 1


    Auth:
      type: object
      properties:

        data:
          type: object
          properties:

            token:
              type: string
              example: "1|Bls37PLszsyHnhheXAElRyxOUnfZGPtbO9xRSVNU"


    User:
      type: object
      properties:
        data:
          type: object
          properties:

            id:
              type: integer
              example: 1

            username:
              type: string
              example: Robert


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # optional, for documentation purposes only
      description: >-
        Enter the token that is given when a user logs in.